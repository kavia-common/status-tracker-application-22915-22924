{"is_source_file": true, "format": "Python", "description": "This source file contains utility functions for paginating database query results and enforcing admin privileges via JWT claims in a Flask web application.", "external_files": ["flask", "flask_jwt_extended", "werkzeug"], "external_methods": ["request.args.get", "get_jwt", "Forbidden"], "published": [], "classes": [], "methods": [{"name": "paginate_query(query, default_size=10, max_size=50)", "description": "Paginates a SQLAlchemy query based on 'page' and 'size' parameters from the request, returning items and metadata about pagination.", "scope": "", "scopeKind": ""}, {"name": "require_admin()", "description": "Checks JWT claims for admin privileges and raises a Forbidden exception if the user is not an admin.", "scope": "", "scopeKind": ""}], "calls": ["request.args.get", "get_jwt", "Forbidden"], "search-terms": ["paginate_query", "require_admin", "JWT", "pagination", "Flask utils", "status-tracker"], "state": 2, "file_id": 11, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "paginate_query", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/utils.py", "pattern": "/^def paginate_query(query, default_size=10, max_size=50):$/", "language": "Python", "kind": "function", "signature": "(query, default_size=10, max_size=50)"}, {"_type": "tag", "name": "require_admin", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/utils.py", "pattern": "/^def require_admin():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "0949bba4deb0a80d14e4cff21e61f2fa", "format-version": 4, "code-base-name": "status_tracker_backend", "filename": "status_tracker_backend/app/utils.py", "revision_history": [{"23": ""}]}