{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing the application factory pattern for a Flask-based backend server, configuring application settings, registering blueprints for routes, initializing extensions, and setting up API documentation.", "external_files": [".config", ".extensions", ".routes.health", ".routes.auth", ".routes.users", ".routes.statuses", ".cli"], "external_methods": ["flask.Flask", "flask_cors.CORS", "flask_smorest.Api", ".config.Config", ".extensions.db", ".extensions.migrate", ".extensions.ma", ".extensions.jwt", ".routes.health.blp", ".routes.auth.blp", ".routes.users.blp", ".routes.statuses.blp", ".cli.init_db_command"], "published": ["app", "api"], "classes": [], "methods": [{"name": "create_app()", "description": "Application factory function that creates and configures a Flask app, registers routes, initializes extensions, and sets up API documentation.", "scope": "", "scopeKind": ""}], "calls": ["app.config.from_object", "CORS(app, resources={r\"/*\": {\"origins\": app.config.get(\"CORS_ORIGINS\", \"*\")}})", "api.register_blueprint", "app.cli.add_command"], "search-terms": ["Flask app factory", "API setup", "Blueprint registration", "Extension initialization", "Swagger UI URL", "CORS configuration", "API documentation", "Route blueprints", "CLI command registration"], "state": 2, "file_id": 2, "knowledge_revision": 34, "git_revision": "daeec7124a4a0770c83e8655eb2063f722ee6e84", "revision_history": [{"13": "daeec7124a4a0770c83e8655eb2063f722ee6e84"}, {"30": "daeec7124a4a0770c83e8655eb2063f722ee6e84"}, {"34": "daeec7124a4a0770c83e8655eb2063f722ee6e84"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^api = next((ext for ext in app.extensions.get(\"flask-smorest\", []) if isinstance(ext, Api)), Non/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_blp", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^from .routes.auth import blp as auth_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "cli_module", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^    from . import cli as cli_module  # noqa: F401$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_app", "scopeKind": "function", "nameref": "unknown:cli"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^def create_app():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "statuses_blp", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^from .routes.statuses import blp as statuses_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "users_blp", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22924/status_tracker_backend/app/__init__.py", "pattern": "/^from .routes.users import blp as users_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "64c8311951a99bb0d0481629c7c50158", "format-version": 4, "code-base-name": "status_tracker_backend", "filename": "status_tracker_backend/app/__init__.py", "fields": [{"name": "api = next((ext for ext in app.extensions.get(\"flask-smorest\", []) if isinstance(ext, Api)), Non/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}]}